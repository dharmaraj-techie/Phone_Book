type: edu
custom_name: stage4
files:
- name: src/phonebook/Main.kt
  visible: true
  text: |
    package phonebook

    import kotlin.math.sqrt


    fun main() {
        val directoryFile = java.io.File("C:\\Users\\Admin\\Desktop\\_directory.txt")
        val findFile = java.io.File("C:\\Users\\Admin\\Desktop\\find.txt")

        val contactList = directoryFile.readLines();
        val searchList = findFile.readLines();
        val size = searchList.size

        val (timeTakenByLinearSearch , foundContacts )= linearSearch(searchList, contactList)
        println("Found $foundContacts / $size entries. Time taken: ${minConverter(timeTakenByLinearSearch)} \n")

        val (sortedList, sortingTime) = bubbleSort(contactList)

        if(sortingTime > timeTakenByLinearSearch*10 ){
            val (searchTime, found) = linearSearch(searchList, sortedList)
            println("Found $found / $size entries. Time taken: ${minConverter(sortingTime + searchTime)} ")
            println("Sorting time: ${minConverter(sortingTime)} - STOPPED, moved to linear search")
            println("Searching time: ${minConverter(searchTime)}")

        }else{
            //jumpSearch
            val (searchTime, found)  = jumpSearch(searchList, sortedList)
            println("Found $found / $size entries. Time taken: ${minConverter(sortingTime + searchTime)} ")
            println("Sorting time: ${minConverter(sortingTime)} ")
            println("Searching time: ${minConverter(searchTime)}")
        }


        val (quickSortedList, quickSortTime) = quickSort(contactList)
        val (quickSortSearchTime, QuickFound) = binarySearch(searchList, quickSortedList)
        println("Found $QuickFound / $size entries. Time taken: ${minConverter(quickSortTime + quickSortSearchTime)} ")
        println("Sorting time: ${minConverter(quickSortTime)} ")
        println("Searching time: ${minConverter(quickSortTime)}")

    }


    private fun quickSort(listOfContacts: List<String>): Pair<MutableList<String>, Long>{
        val mutableContactList = listOfContacts.toMutableList()

        var quickSortStartTime = System.currentTimeMillis()
        println("Start searching (quick sort + binary search)...")

        val end = mutableContactList.lastIndex
        qSort(0,end,mutableContactList)

        var quickSortEndTime = System.currentTimeMillis()
        val sortingTime = quickSortEndTime - quickSortStartTime
        return  Pair(mutableContactList, sortingTime)
    }


    private fun qSort(start: Int, end: Int, mutableList: MutableList<String>){
        if(start >= end){
            return
        }
        val pivot = mutableList[end].filter { it !in '\u0030'..'\u0039' }.trim()
        var j = start - 1
        for (i in start until end) {
            if (mutableList[i].filter { it !in '\u0030'..'\u0039' }.trim() < pivot) {
                j++
                val temp = mutableList[j]
                mutableList[j] = mutableList[i]
                mutableList[i] = temp
            }
        }
        j++
        val temp = mutableList[j]
        mutableList[j] = mutableList[end]
        mutableList[end] = temp

        qSort(start, --j,mutableList)
        qSort(++j , end,mutableList)
    }

    private fun binarySearch(searchList: List<String>, mutableContactList: MutableList<String>): Pair<Long, Int>{
        var binarySearchStartTime = System.currentTimeMillis()
        val size = mutableContactList.size
        var foundContacts = 0


        for(contactName in searchList){
           val isFound = bs(0,mutableContactList.lastIndex,mutableContactList,contactName)
            if(isFound != -1) ++foundContacts
        }


        var binarySearchEndTime = System.currentTimeMillis()
        val jumpSearchTime = binarySearchEndTime - binarySearchStartTime
        return Pair(jumpSearchTime , foundContacts)
    }

    private fun bs(start: Int, end: Int,  mutableList: MutableList<String>,elementToBeFound: String ): Int {
        if (start <= end) {
            val middle = (start + end) / 2
            if (mutableList[middle].filter { it !in '\u0030'..'\u0039' }.trim() == elementToBeFound) return middle
            if (mutableList[middle].filter { it !in '\u0030'..'\u0039' }.trim() > elementToBeFound) {
                return bs(start, middle - 1,mutableList, elementToBeFound)
            }

            return bs(middle + 1, end,mutableList, elementToBeFound)
        }
        return -1
    }

    private fun linearSearch(searchList: List<String>, contactList: List<String>): Pair<Long, Int> {
        var foundContacts = 0
        var startTime = System.currentTimeMillis()
        println("Start searching (linear search)...")
        for (name in searchList) {
            for (contact in contactList) {
                if (contact.contains(name)) {
                    foundContacts++
                    break
                }
            }
        }
        var endTime = System.currentTimeMillis()
        val timeTaken = endTime - startTime

        return Pair(timeTaken,foundContacts)
    }

    fun bubbleSort(listOfContacts: List<String>): Pair<MutableList<String>, Long> {
        //Bubble sort
        val mutableContactList = listOfContacts.toMutableList()
        var bubbleSortStartTime = System.currentTimeMillis()
        println("Start searching (bubble sort + jump search)...")
        for (i in 0 until mutableContactList.lastIndex) {
            for (j in 0 until mutableContactList.lastIndex - i) {
                if (mutableContactList[j].filter { it !in '\u0030'..'\u0039' }.trim() >
                        mutableContactList[j + 1].filter { it !in '\u0030'..'\u0039' }.trim()) {
                    val temp = mutableContactList[j]
                    mutableContactList[j] = mutableContactList[j + 1]
                    mutableContactList[j + 1] = temp
                }
            }
        }
        var bubbleSortEndTime = System.currentTimeMillis()

        val sortingTime = bubbleSortEndTime - bubbleSortStartTime

        return  Pair(mutableContactList, sortingTime)
    }

    private fun jumpSearch(searchList: List<String>, mutableContactList: MutableList<String>): Pair<Long, Int> {
        var jumpSearchStartTime = System.currentTimeMillis()
        val size = mutableContactList.size
        val n = sqrt(size.toDouble()).toInt()

        var foundContacts = 0

        for(contactName in searchList){
            var i = n
            var blockToSearch = -1
            while (i < size) {
                if (mutableContactList[i].filter { it !in '\u0030'..'\u0039' }.trim() >= contactName) {
                    blockToSearch = i
                    break
                }
                i += n
                if (i >= size - 1) {
                    if (mutableContactList[mutableContactList.lastIndex] >= contactName) {
                        blockToSearch = mutableContactList.lastIndex
                        break
                    } else {
                        blockToSearch = -1
                        break
                    }
                }
            }
            if (blockToSearch != -1) {
                for (j in blockToSearch downTo blockToSearch - n) {
                    if (mutableContactList[j].filter { it !in '\u0030'..'\u0039' }.trim() == contactName) {
                        foundContacts++
                        break
                    }
                }
            }

        }
        var jumpSearchEndTime = System.currentTimeMillis()
        val jumpSearchTime = jumpSearchEndTime - jumpSearchStartTime
        return Pair(jumpSearchTime , foundContacts)
    }

    fun minConverter(milliSeconds: Long): String {
        val s = milliSeconds / 1000
        val ms = milliSeconds % 1000
        val sec = s % 60
        val min = s / 60
        return ("$min min. $sec sec. $ms ms.")
    }
  learner_created: false
- name: src/phonebook/find.txt
  visible: true
  text: |-
    Lyndel Raymond
    Meta Joappa
    Kynthia Nadbus
    Ethelind Skeie
    Shoshana Utica
    Marisa Firman
    Gwenette Anagnos
    Charlena Girardo
    Alexina Belcher
    Karee Antoinetta
    Dolley Panther
    Elysha Quinlan
    Trixie Winer
    Ricki Trovillion
    Amye Uriisa
    Hedwig Wally
    Gwenette Kironde
    Jermaine Naaman
    Olga Rosanne
    Annecorinne Ause
    Aurie Dorisa
    Van Fawnia
    Carmella Campman
    Francesca Francis
    Elwira Florrie
    Nonna Miko
    Natka Herculie
    Roxi Hett
    Brandise Hardan
    Toby Bleier
    Dalia Gleeson
    Emelia Annnora
    Beatrisa Jegar
    Barbara-Anne Chicky
    Ann Agnella
    Lebbie Alabaster
    Leola Whelan
    Starlin Griz
    Anjanette Uis
    Tasha Chem
    Mercy Annnora
    Koo Joselyn
    Jocelyn Huberto
    Maighdiln Louise
    Gena Criswell
    Letta Alded
    Diahann Vaughn
    Seana Swainson
    Barrie Louis
    Ronnie Genna
    Millisent Sukey
    Jojo LaSorella
    Zia Chretien
    Candie Connelley
    Myrilla Lewellen
    Nerissa Migeon
    Willa Olly
    Meriel Steinberg
    Catrina Dewie
    Vivian Sofer
    Katuscha Suzann
    Donnamarie Puklich
    Cindy Heffron
    Kalina Darill
    Ryann Heidt
    Rivi Hephzipah
    Johannah Fradin
    Yasmin Clercq
    Gilligan Susy
    Roseboro
    Camella Martinsen
    Annalise Peters
    Inger Neilla
    Federica Cox
    Leontine Dre
    Ermina Gaspard
    Minerva Gine
    Kandy Sigfried
    Vallie Bakemeier
    Estell Weinberg
    Marja Corin
    Mirella Dust
    Dulcie Esau
    Judy Balcke
    Anjela Thelma
    Leslie Elene
    Jordan Simon
    Angelle Geddes
    Trudi Weiss
    Daisey Landrum
    Aleen Mellitz
    Fredericka Avaria
    Kirsti Schilling
    Anallese Enalda
    Tera Perretta
    Yvette Iona
    Jaclin Malissia
    Nadean Jonette
    Glynis Durrace
    Wendy Laughlin
    Tiffy Edmondo
    Janenna Ailina
    Devina Oruntha
    Catherina Dhumma
    Malissa Sibie
    Angel Ruthanne
    Amandy Guidotti
    Tybie McEvoy
    Horatia Pooley
    Aline Thomas
    Elly McCormac
    Carmita Carmelia
    Aurel Cutlip
    Krissie Semele
    Adaline Savill
    Kore Quita
    Brunhilda Cuttler
    Janene Bette
    Adah Torp
    Carmina Zurn
    Aurea Bohman
    Amara Cram
    Brittaney Fisken
    Cristen Dupre
    Gavrielle Korrie
    Roxine Ericka
    Wren Apps
    Alissa Jess
    Teddi Rosenberg
    Suki Irisa
    Iolanthe Datha
    Andra Avitzur
    Jacquelin Patricio
    Jelene Docile
    Maire Gothard
    Serena Shirlene
    Beth Coltin
    Candide Fayre
    Almira Koby
    Devi Khoury
    Aurore Gert
    Jillene Tomasine
    Lebbie Samford
    Cordelie Aney
    Murielle Duffie
    Celle Vanda
    Ivette Cormac
    Nathalie Chemosh
    Krissie Cloutman
    Shelagh Mahala
    Donetta Kendrick
    Rory Mungovan
    Rachael Pul
    Melitta Jentoft
    Melitta Standley
    Nicoli Aida
    Anjela Werby
    Shirleen Odyssey
    Klarika Cristine
    Jen Baudoin
    Margit The
    Elladine Doy
    Arvada
    Melina Vachel
    Selle Selby
    Juliana Wilkey
    Janeta Bullard
    Effie Melantha
    Wenda Marty
    Deina Kat
    Carline Nihi
    Doe Schweitzer
    Dahlia Nehemiah
    Aeriel Jagir
    Daphne Rutledge
    Estel Kamerman
    Scarlet Mair
    Ardith Denys
    Aimee Rodgers
    Marisa Rosemary
    Odilia Clower
    Louisa Marshall
    Catina Bellamy
    Myrle Savdeep
    Kaitlynn Renie
    Barby Pattie
    Hildagard Levison
    Dierdre Migeon
    Rana Moreville
    Giralda Steck
    Eba Louie
    Matilde Brent
    Marketa Bunde
    Merrily Willamina
    Marty Filide
    Susette Eisen
    Delinda Garrik
    Rosella Walton
    Virginie Cypro
    Kay Almeta
    Merrie Gargan
    Maggy Marcelline
    Sharon MacIlroy
    Rebe Queri
    Kimberlyn Susanna
    Onida Afrikah
    Shayla Donovan
    Barbara Dawson
    Kari Natalya
    Astra Moritz
    Lucia Ivonne
    Adriena Sonia
    Lorette Lon
    Dalenna Gazo
    Roxane Margot
    Muriel Pepi
    Marrissa Elsa
    Roby Salisbury
    Leena Agee
    Libbey Fabrienne
    Lorrin Rafi
    Andrea Genie
    Anett Jeffy
    Bianca Duong
    Gusella Kulda
    Wandis Marieann
    Vikky Haveman
    Mela Danell
    Domino
    Brear Cranston
    Kimmi Ammon
    Genna Jarrow
    Tatiana Dorothy
    Zsa Marala
    Alica Wadlinger
    Gabey Ewan
    Dana Valerle
    Germana Gilletta
    Bellanca Mikal
    Giana Streeto
    Concettina Maxie
    Ellissa Wiedmann
    Micaela Barrington
    Theo Abroms
    Megen Nikita
    Eva Dovev
    Emily Sigler
    Cristen Lacee
    Nessi Rubina
    Brittni Richmound
    Valma Catriona
    Gerianne Latvina
    Jania Hendren
    Keensburg
    Noni Evadnee
    Andee Ciprian
    Melly Cliffes
    Kristine Norby
    Philippine Penoyer
    Dedra Renaldo
    Kerstin Nessa
    Nadya Lorelei
    Jillene Smiga
    Coralyn Bakeman
    Cherida Farland
    Daphene Neille
    Rose Ignaz
    Lynea Southworth
    Ines Fulks
    Kanya Ultann
    Lydia Greabe
    Carey Estus
    Leta Hopfinger
    Zorina Thirzia
    Serena Ailene
    Cheryl Omari
    Beverly Thompson
    Emelita Cynar
    Ellissa Leake
    Aleta Stempson
    Rosalia Roper
    Marys Prouty
    Birgitta Borries
    Shanda Sarkaria
    Yalonda Reagen
    Rubia Geminius
    Gabbie Tori
    Davita Tobit
    Cherie Obrien
    Lishe Balf
    Augustina Shaeffer
    Alecia Berkshire
    Ariadne Vivianna
    Dulcine Koziarz
    Elizabeth Drucill
    Pat Gianina
    Jaime Ulberto
    Grata Valerie
    Lorelle Norrie
    Kissee Holsworth
    Vitia Gimpel
    Leanor Arvind
    Ermentrude Anson
    Dael Trev
    Marybeth Mara
    Emmalynn Paola
    Caitlin Boice
    Maryanna Pryce
    Nari Dixil
    Yolanthe Cattan
    Haleigh Miller
    Marcy Trellas
    Davina Edsel
    Theda Pip
    Blondelle Martijn
    Karilynn Astera
    Nicolle Earl
    Josselyn Cherice
    Sylvia Albertine
    Murial Vere
    Junia Ardra
    Trixy Delilah
    Melisent Broek
    Arlena Ed
    Gianina Jarrad
    Donella Orland
    Philomena Lolande
    Elisha Samal
    Robenia Albina
    Daile Lal
    Shauna Erbe
    Katherina Rubie
    Kassi Dagley
    Leta Liliane
    Sasha Gilbertson
    Bunni Jodi
    Mable Catlee
    Mariellen Ermey
    Lilian Aurelio
    Jasmina Mercedes
    Joane Demetria
    Kristi Nico
    Vanya Lodge
    Janey Sadonia
    Dione Hewe
    Cybill Strage
    Babara Eldon
    Shane Hartman
    Daphene Alisa
    Veriee Bertolde
    Prue Emera
    Lynett Hobey
    Ardisj Lias
    Ellynn Lelia
    Kerry Encrata
    Leoine McCartan
    Arlena Tedie
    Emilee Pineda
    Avie Shanan
    Goldi Jotham
    Sonja Marjorie
    Shawna Dionysus
    Billie Levona
    Melitta Zelig
    Dorette Cassiani
    Flori Kirschner
    Amber McDonald
    Trude Tony
    Pippa Leandra
    Janna Domeniga
    Julina Rudolfo
    Natalie Henson
    Babbie Varney
    Lorain Hijoung
    Constance Marice
    Susette Dikmen
    Niki Vander
    Harley Ammon
    Avis Anabelle
    Guinna Garrick
    Ranee Lontson
    Codie Ziegler
    Ange Koffler
    Lorette Omero
    Becky Eoin
    Elnora Cressy
    Angele Grantley
    Sharyl Eustis
    Idelle Cantone
    Amii Hegarty
    Charmion Joby
    Jeane Gristede
    Johnna Daveen
    Aida Norton
    Abbie Haman
    Elsinore Audras
    Ferrum
    Babb Wesa
    Delores Ricca
    Ebony Seidler
    Fanechka Fariss
    Ammamaria Sender
    Frieda Almita
    Toma Brennan
    Annalee Edmee
    Sheba Shurlocke
    Ulla Bonnee
    Corella Ozzy
    Margaret Jordison
    Robyn Barthol
    Jessamine Cusack
    Ashly Woehick
    Alejandrina Burris
    Zahara Obrien
    Deeanne Bilbe
    Mahalia Zerline
    Estella Baalbeer
    Joice Noby
    Dionne Australia
    Sabina Jereld
    Celie Spindell
    Kirsti Zingg
    Jenifer Wyne
    Adda Rochus
    Blanch Vins
    Elga Dorcia
    Wanda Iphagenia
    Geneva Northrop
    Cherice Fairley
    Deerdre Fritzsche
    Annabal Obara
    Auguste Barrett
    Mattie Coltson
    Fanchon Lytle
    Milzie Saphra
    Romola McMahon
    Emily Tibbs
    Martelle Erroll
    Allyce Gearhart
    Maritsa Gaston
    Evey Lunseth
    Elga Moyna
    Felipa Marijane
    Anne-Corinne Cenac
    Winona Douglas
    Rafaelia Lindner
    Ginelle Ashton
    Nanny Hyde
    Lynnett Joline
    Fred Marks
    Celia Selhorst
    Fleurette Kellyn
    Idalia Chute
    Grethel Junie
    Kirsteni Lytton
    Cathleen Adalheid
    Katherina Ridinger
    Idette Wein
    Annabelle Adlei
    Ambur Rolland
    Layne Linker
    Jordain Gerty
    Camille Katharyn
    Staci Sproul
    Kellie Harv
    Roxane Barth
    Vittoria Leatrice
    Cyndia Thomasin
    Nicolea Schmitt
    Marlene Ahearn
    Cristine Churchill
    Adella Maunsell
    Cissy Jeniece
    Emyle Delinda
    Erminie Dewie
    Drusi Fernandina
    Lynea Gibrian
    Tisha Candie
    Michelina Holbrooke
    Deirdre Giorgio
    Amabelle Cagle
    Hildy Portwine
    Dasi Seligman
    Ericka Vincentia
    Almeria Starks
    Angeline Shetrit
    Estella Bobby
    Elly Amabil
    Georgine Botsford
    Cathleen Citron
    Quintana Hugon
    Jewel Gustie
    Mathilda Gan
    Merilee Howlan
    Carleen Zumwalt
    Bobbe Faubion
    Star Robillard
    Daniele Abbotsen
    Kaela Lali
    Kimberly Bernetta
  learner_created: false
- name: src/phonebook/directory.txt
  visible: true
  learner_created: false
- name: test/PhoneBookTest.java
  visible: false
  text: |
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.hyperskill.hstest.testcase.TestCase;
    import phonebook.MainKt;

    import java.util.ArrayList;
    import java.util.Arrays;
    import java.util.List;
    import java.util.regex.Matcher;
    import java.util.regex.Pattern;

    public class PhoneBookTest extends StageTest {
        public PhoneBookTest() {
            super(MainKt.class);
        }

        private long timeOnTestStart;

        @Override
        public List<TestCase> generate() {
            timeOnTestStart = System.currentTimeMillis();
            return Arrays.asList(
                    new TestCase().setTimeLimit(30 * 60 * 1000)
            );
        }


        private CheckResult checkPhrases(String reply, String... phrases) {
            reply = reply.toLowerCase();
            for (String phrase : phrases) {
                if (!reply.contains(phrase.toLowerCase())) {
                    return CheckResult.wrong("Not found the part `" + phrase + "` in your output.");
                }
            }
            return CheckResult.correct();
        }

        private List<String> findAll(String reply, String regex) {
            Matcher matcher = Pattern.compile(regex).matcher(reply);
            List<String> groups = new ArrayList<>();
            while (matcher.find()) {
                groups.add(matcher.group());
            }
            return groups;
        }

        private String timeRegex = "(\\d+)\\s*min.*?(\\d+)\\s*sec.*?(\\d+)\\s*ms";
        private Pattern timeRegexPattern = Pattern.compile(timeRegex);

        private long parseTimestamp(String timestamp) {
            Matcher matcher = timeRegexPattern.matcher(timestamp);
            if (!matcher.matches() || matcher.groupCount() < 3) {
                throw new IllegalStateException("???Not matches the line " + timestamp);
            }
            int min = Integer.parseInt(matcher.group(1));
            int sec = Integer.parseInt(matcher.group(2));
            int ms = Integer.parseInt(matcher.group(3));
            return ms + sec * 1000 + min * 1000 * 60;
        }


        @Override
        public CheckResult check(String reply, Object clue) {
            long realTime = System.currentTimeMillis() - timeOnTestStart;
            reply = reply.toLowerCase();
            CheckResult res = checkPhrases(reply,
                    "found",
                    "min.",
                    "sec.",
                    "ms.",
                    "sorting time",
                    "searching time",
                    "linear search",
                    "bubble sort",
                    "jump search",
                    "quick sort",
                    "binary search",
                    "hash table",
                    "creating time"
            );
            if (!res.isCorrect()) {
                return res;
            }

            List<String> stat1 = findAll(reply, "500 / 500");
            List<String> stat2 = findAll(reply, "500/500");

            if (stat1.size() + stat2.size() < 4) {
                return CheckResult.wrong("Your output should contain 4 times the phrase `500 / 500`");
            }

            List<String> timestamps = findAll(reply, timeRegex);
            if (timestamps.size() != 10) {
                return CheckResult.wrong("Your output should contain 10 timer outputs, but found "
                        + timestamps.size());
            }
            // should not fail..
            long t1 = parseTimestamp(timestamps.get(0));
            long t2 = parseTimestamp(timestamps.get(1));
            long t3 = parseTimestamp(timestamps.get(2));
            long t4 = parseTimestamp(timestamps.get(3));
            // qsort
            long t5 = parseTimestamp(timestamps.get(4));
            long t6 = parseTimestamp(timestamps.get(5));
            long t7 = parseTimestamp(timestamps.get(6));
            // hash table
            long t8 = parseTimestamp(timestamps.get(7));
            long t9 = parseTimestamp(timestamps.get(8));
            long t10 = parseTimestamp(timestamps.get(9));

            if (Math.abs(t3 + t4 - t2) > 100) {
                return CheckResult.wrong("Your third and fourth timer outputs in total (bubble sorting and searching) " +
                        "should be equal to the second (total search time).");
            }
            if (Math.abs(t6 + t7 - t5) > 100) {
                return CheckResult.wrong("Your 6-th and 7-th timer outputs in total (qsort and searching) " +
                        "should be equal to the 5-th (total search time).");
            }
            if (Math.abs(t9 + t10 - t8) > 100) {
                return CheckResult.wrong("Your 9-th and 10-th timer outputs in total (creating hashtable and searching) " +
                        "should be equal to the 8-th (total search time).");
            }

            long estimatedTime = t1 + t2 + t5 + t8;
            if (realTime < 1000) {
                return CheckResult.wrong("Your program completes too fast. Faster than a second!");
            }

            if (Math.abs(estimatedTime - realTime) > estimatedTime * 0.3) {
                return CheckResult.wrong("Your estimated time is not similar to real time the program works. " +
                        "Real time: " + realTime + "ms, estimated time: " + estimatedTime + "ms");
            }

            if (t8 >= t5) {
                return CheckResult.wrong("Your hashtable works slower, than quick sort + binary search.");
            }
            return CheckResult.correct();
        }
    }
  learner_created: false
feedback_link: https://hyperskill.org/projects/86/stages/479/implement
status: Solved
feedback:
  message: Congratulations! Continue on <a href="https://hyperskill.org/projects/86/stages/479/implement">JetBrains
    Academy</a>
  time: Wed, 23 Sep 2020 10:22:14 UTC
record: -1
